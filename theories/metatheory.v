Require Import semantics.
Require Import set.
Require Import ol.
Require Import util.

Lemma eq_set_respects_sat s s' phi :
  s ‚â° s' ->
  s ‚ä® phi ->
  s' ‚ä® phi.
Proof.
  revert s s'. induction phi; intros s s' Heq Hsat; simpgoal; eauto.
  - intros ?. split; intros.
    specialize (Heq x).
     specialize (Hsat x).
    simpgoal. solve_eq_set.
  - repeat eexists; intros; try eassumption.
Admitted.

Lemma rule_zero_sound phi : ‚ä® ‚ü® phi ‚ü© ùüò ‚ü® ‚ä§‚äï ‚ü©.
Proof.
  intros s ? œÉ. split.
  - intros H'. destruct H' as [? [? Hc]]. inversion Hc.
  - intros Hc. inversion Hc.
Qed.

Lemma rule_one_sound phi : ‚ä® ‚ü® phi ‚ü© ùüô ‚ü® phi ‚ü©.
Proof. Admitted.

Lemma rule_seq_sound phi psi theta C1 C2 :
  ‚ä® ‚ü® phi ‚ü© C1 ‚ü® psi ‚ü© ->
  ‚ä® ‚ü® psi ‚ü© C2 ‚ü® theta ‚ü© ->
  ‚ä® ‚ü® phi ‚ü© C1 ‚®ü C2 ‚ü® theta ‚ü©.
Proof. Admitted.

Lemma rule_split_sound phi1 psi1 phi2 psi2 C :
  ‚ä® ‚ü® phi1 ‚ü© C ‚ü® psi1 ‚ü© ->
  ‚ä® ‚ü® phi2 ‚ü© C ‚ü® psi2 ‚ü© ->
  ‚ä® ‚ü® phi1 ‚äï phi2 ‚ü© C ‚ü® psi1 ‚äï psi2 ‚ü©.
Proof. Admitted.

Lemma rule_consequence_sound phi phi' psi psi' C :
  (forall m, m ‚ä® phi' ‚áí phi) ->
  ‚ä® ‚ü® phi ‚ü© C ‚ü® psi ‚ü© ->
  (forall m, m ‚ä® psi ‚áí psi') ->
  ‚ä® ‚ü® phi' ‚ü© C ‚ü® psi' ‚ü©.
Proof. Admitted.

Lemma rule_empty_sound C : ‚ä® ‚ü® ‚ä§‚äï ‚ü© C ‚ü® ‚ä§‚äï ‚ü©.
Proof. Admitted.

Lemma rule_true_sound phi C  : ‚ä® ‚ü® phi ‚ü© C ‚ü® ‚ä§ ‚ü©.
Proof. Admitted.

Lemma rule_false_sound C phi : ‚ä® ‚ü® ‚ä• ‚ü© C ‚ü® phi ‚ü©.
Proof. Admitted.

Lemma rule_plus_sound phi psi1 psi2 C1 C2 :
  ‚ä® ‚ü® phi ‚ü© C1 ‚ü® psi1 ‚ü© ->
  ‚ä® ‚ü® phi ‚ü© C2 ‚ü® psi2 ‚ü© ->
  ‚ä® ‚ü® phi ‚ü© C1 + C2 ‚ü® psi1 ‚äï psi2 ‚ü©.
Proof. Admitted.

Lemma rule_induction_sound phi psi C :
  ‚ä® ‚ü® phi ‚ü© ùüô + C ‚®ü C ‚ãÜ ‚ü® psi ‚ü© ->
  ‚ä® ‚ü® phi ‚ü© C ‚ü® psi ‚ü©.
Proof. Admitted.

Create HintDb sound_lemmas.

Hint Resolve rule_zero_sound rule_one_sound rule_seq_sound rule_split_sound
  rule_consequence_sound rule_empty_sound rule_true_sound rule_false_sound
  rule_plus_sound rule_induction_sound : sound_lemmas.

Theorem rules_sound phi C psi :
  ‚ä¢ ‚ü® phi ‚ü© C ‚ü® psi ‚ü© ->
  ‚ä® ‚ü® phi ‚ü© C ‚ü® psi ‚ü©.
Proof.
  intros. induction H; eauto with sound_lemmas.
Qed.
